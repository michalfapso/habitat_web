---
import { getCollection, getEntry } from 'astro:content';
import LayoutMarkdownPage from '../layouts/LayoutMarkdownPage.astro';
import { defaultLang, languages } from '../i18n/utils';

export async function getStaticPaths() {
  // console.log('pages ...slug getStaticPaths()');
  const pages = await getCollection('pages');
  const langKeys = Object.keys(languages);
  const langRegex = new RegExp(`^(.*?)\.(${langKeys.join('|')}).md$`);
  const paths = pages.map(page => {
    // Match slugs ending in 'sk' or 'cz' to determine language.
    // e.g., "zasady-cookiescz" -> baseSlug: "zasady-cookies", lang: "cz"
    // console.log('page:', page);
    const langMatch = page.id.match(langRegex);
    let lang = langMatch ? langMatch[2] : defaultLang;

    let baseSlug = page.slug.replace(new RegExp(`(${langKeys.join('|')})$`), '');
    // console.log('page.slug:', page.slug, ' baseSlug:', baseSlug, ' lang:', lang);

    const slug = lang === defaultLang ? baseSlug : `${lang}/${baseSlug}`;

    return {
      params: { slug },
      props: { lang, page, id: page.id, fullPath: `/${slug}` },
    };
  });
  // console.log('paths:', paths);
  return paths;
}

const { page, lang } = Astro.props;
const { Content } = await page.render();
---
<LayoutMarkdownPage {...page.data} lang={lang}>
  <Content />
</LayoutMarkdownPage>
